{% extends 'base.html.twig' %}


{% block title %}BALISES{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href='https://api.mapbox.com/mapbox.js/v3.2.0/mapbox.css' rel='stylesheet' />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin="" />

    <link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.css" />
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.Default.css" />

    <style type="text/css">
        #map{ /* la carte DOIT avoir une hauteur sinon elle n'apparaît pas */
            height: 100%;
        }

    </style>
{% endblock %}



{% block body %}


    {# {% for theater in theaters %}
     {{ theater.city }}
    {% endfor %} #}
    <div class="popupCustom" id="map">
    </div>

    <div id="selectplacetitle">
        <h1>SÉLECTIONNER</h1>
        <h1> VOTRE <span>LIEU</span></h1>
    </div>

    <div id="logoonmap">
        <img src="http://www.balises-theatres.com/img/Logo_balises_rond.png" alt="">
    </div>



    <!-- Info Bulle -->

    {% for theater in theaters %}

    <div class="bulleInfo" id="theater{{ theater.id }}">
        <div class="container-fluid">
            <div class="row bulleinfo">

                <div class="col-5">
                    <div class="jumbotron bulleInfo1">
                        <h1 class="display-4">{{ theater.name }}</h1>
                        <p class="lead">{{ theater.address1 }}</p>
                        <p class="lead">{{ theater.zipcode }} {{ theater.city }}</p>
                        <hr class="my-4">
                    </div>
                </div>

                <div class="col-2">
                    <div class="bulleInfo2">

                    </div>
                </div>

                <div class="col-5">
                    <div class="jumbotron bulleInfo3">
                        <h1 class="display-4">Hello, world!</h1>
                        <p class="lead">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>
                        <hr class="my-4">
                    </div>
                </div>

                <div class="col-5">
                    <div class="bulleInfo4">

                    </div>
                </div>

                <div class="col-2">
                    <div class="bulleInfo5">

                    </div>
                </div>

                <div class="col-5">
                    <div class="jumbotron bulleInfo6">
                        <h1 class="display-4">Hello, world!</h1>
                        <p class="lead">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>
                        <hr class="my-4">
                    </div>
                </div>

            </div>
        </div>
    </div>


{% endfor %}




{% endblock %}



{% block javascripts %}
    {{ parent() }}
    <script src='https://api.mapbox.com/mapbox.js/v3.2.0/mapbox.js'></script>


    <script>
        // On initialise la latitude et la longitude de Lyon (centre de la carte)
        let lat = 45.75;
        let lon = 4.85;
        let zoom = 13; // Zoom de la carte par défaut

        L.mapbox.accessToken = 'pk.eyJ1IjoiYmFsaXNlcyIsImEiOiJjandqZThmaXIwZzF5NDhvNWE0eWhxbThjIn0.L-XJu_ElG2aGqQx4ZijbIg';
        let map = L.mapbox.map('map')
            .setView([lat, lon], zoom)
            .addLayer(L.mapbox.styleLayer('mapbox://styles/balises/cjwkqf7kr2woy1cqtbxg92srx'))


        let customOptions =
            {
                'maxWidth': '100%',
                'width': '100%',
                'className' : 'popupCustom',
            }

        // Récupération coordonnées GPS dans tableau JS :
        let pointers =
            [
                {% for theater in theaters %}
                {
                    lat : '{{ theater.lat }}',
                    long : '{{ theater.longitude }}',
                    id : '{{ theater.id }}',
                },
                {% endfor %}
            ];


        for (let i = 0; i < pointers.length; i++)

        {
            let latitude = pointers[i].lat;
            let longitude = pointers[i].long;
            let pointerId = pointers[i].id;
            let elements = document.getElementById('theater'+ pointerId);
            let hideAction = document.getElementById('selectplacetitle');
            hideAction.style.display = "block";

            let marker = L.marker([latitude, longitude]).addTo(map);


            // bind the custom popup

            marker.bindPopup(elements, customOptions);


            marker.addEventListener("click",function ()
            {
                elements.style.display = "block";
                hideAction.style.display = "none";
                map.setView([latitude, longitude], zoom);

            });


        }


        map.addEventListener("click", function () {
            let hideAction = document.getElementById('selectplacetitle');
            hideAction.style.display = "block";
            map.setView([lat, lon], zoom);


        })



    </script>


{% endblock %}

